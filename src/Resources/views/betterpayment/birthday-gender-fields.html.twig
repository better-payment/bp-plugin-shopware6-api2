{% if config('BetterPayment.config.sepaDirectDebitCollectGender') || config('BetterPayment.config.invoiceCollectGender') %}
    <div class="form-row">
        <div class="form-group col-md-3 col-sm-6">
            <label for="better_payment_customer_gender">{{ 'betterpayment.register.labelGender' | trans }}*</label>
            <select name="better_payment_customer_gender" id="better_payment_customer_gender" class="custom-select"
                    required>
                <option disabled selected value="">{{ 'betterpayment.register.selectGender' | trans }}</option>
                <option value="m"
                        {% if context.customer.customFields.better_payment_customer_gender == 'm' or data.get('better_payment_customer_gender') == 'm' %} selected {% endif %}>
                    {{ 'betterpayment.register.male' | trans }}
                </option>
                <option value="f"
                        {% if context.customer.customFields.better_payment_customer_gender == 'f' or data.get('better_payment_customer_gender') == 'f' %} selected {% endif %}>
                    {{ 'betterpayment.register.female' | trans }}
                </option>
                <option value="d"
                        {% if context.customer.customFields.better_payment_customer_gender == 'd' or data.get('better_payment_customer_gender') == 'd' %} selected {% endif %}>
                    {{ 'betterpayment.register.diverse' | trans }}</option>
            </select>
        </div>
    </div>

    <script>
        // wait for the document to finish loading
        document.addEventListener('DOMContentLoaded', () => {
            // get the account type selection element
            const accountType = document.getElementById('accountType');

            // get the gender field
            // label is in the same element as field itself, so no need fetch it separately
            const gender = document.getElementById('better_payment_customer_gender');
            const genderField = gender.parentElement.parentElement;

            // function to hide the gender field
            const hideGenderField = () => {
                gender.required = false;
                genderField.style.display = 'none';
            };

            // function to show the gender field
            const showGenderField = () => {
                gender.required = true;
                genderField.style.display = 'block';
            };

            // listen for changes in the account type selection
            accountType.addEventListener('change', () => {
                // check if the selected account type is "Commercial" - key is business
                accountType.value === 'business' ? hideGenderField() : showGenderField();
            });

            // hide the fields if "Commercial" is selected by default
            if (accountType.value === 'business') {
                hideGenderField();
            }
        });
    </script>
{% endif %}

<script>
    // wait for the document to finish loading
    document.addEventListener('DOMContentLoaded', () => {
        // get the account type selection element
        const accountType = document.getElementById('accountType');

        // get config values to see whether we need to collect birthday or gender
        const birthdayIsCollected = {{ (config('BetterPayment.config.sepaDirectDebitCollectDateOfBirth') || config('BetterPayment.config.invoiceCollectDateOfBirth')) | json_encode }};

        // show or hide birthday field if config is set
        if (birthdayIsCollected) {
            // get the birthday field and label
            // as there are 3 select boxes for birthday(day|month|year), label is in the different element
            // so we need to fetch label element separately
            const birthdayDay = document.getElementsByName('birthdayDay')[0];
            const birthdayMonth = document.getElementsByName('birthdayMonth')[0];
            const birthdayYear = document.getElementsByName('birthdayYear')[0];
            const birthdayField = birthdayDay.parentElement.parentElement;
            const birthdayLabel = birthdayField.previousElementSibling;

            // function to hide the birthday field and label
            const hideBirthdayField = () => {
                birthdayDay.required = false;
                birthdayMonth.required = false;
                birthdayYear.required = false;

                // remove asterisk from label to be added later when shown
                birthdayLabel.innerText = birthdayLabel.innerText.replace('*', '');

                birthdayField.style.display = 'none';
                birthdayLabel.style.display = 'none';
            };

            // function to show the birthday field and label
            const showBirthdayField = () => {
                birthdayDay.required = true;
                birthdayMonth.required = true;
                birthdayYear.required = true;

                // add asterisk to label to indicate as required
                birthdayLabel.innerText += '*';

                birthdayField.style.display = 'flex';
                birthdayLabel.style.display = 'block';
            };

            // listen for changes in the account type selection
            accountType.addEventListener('change', () => {
                // check if the selected account type is "Commercial" - key is business
                accountType.value === 'business' ? hideBirthdayField() : showBirthdayField();
            });

            // hide the fields if "Commercial" is selected by default
            if (accountType.value === 'business') {
                hideBirthdayField();
            }
        }
    });
</script>